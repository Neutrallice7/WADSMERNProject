{"version":3,"file":"static/js/144.aaad99ea.chunk.js","mappings":"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","sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Avatar.js","user/components/UserItem.js","user/components/UsersList.js","user/pages/Users.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\n// Draw cards to make it look pretty\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './Avatar.css';\r\n\r\nconst Avatar = props => {\r\n  return (\r\n    <div className={`avatar ${props.className}`} style={props.style}>\r\n      {/* Avatar image basically */}\r\n      <img\r\n        src={props.image}\r\n        alt={props.alt}\r\n        style={{ width: props.width, height: props.width }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Avatar from '../../shared/components/UIElements/Avatar';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\n\r\nconst UserItem = props => {\r\n  return (\r\n    <li className=\"user-item\">\r\n      {/* Card to display the user item */}\r\n      <Card className=\"user-item__content\">\r\n        {/* Link to the user's places page */}\r\n        <Link to={`/${props.id}/places`}>\r\n          <div className=\"user-item__image\">\r\n            {/* Display the user's avatar */}\r\n            <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n          </div>\r\n          <div className=\"user-item__info\">\r\n            {/* Display the user's name */}\r\n            <h2>{props.name}</h2>\r\n            {/* Display the number of places the user has */}\r\n            <h3>\r\n              {props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places'}\r\n            </h3>\r\n          </div>\r\n        </Link>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  // If there's no users, displays no users.\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        // Classifies by components\r\n        <UserItem\r\n          key={user.id}\r\n          id={user.id}\r\n          image={user.image}\r\n          name={user.name}\r\n          placeCount={user.places.length}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\n// Define the Users component\r\nconst Users = () => {\r\n  // Initialize necessary state and custom hook\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  // Fetch users when the component mounts\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + '/users'\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest]);\r\n\r\n  // Render the component JSX\r\n  return (\r\n    <React.Fragment>\r\n      {/* Render the ErrorModal component to display any errors */}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n\r\n      {/* Show a loading spinner while the request is in progress */}\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n\r\n      {/* Display the UsersList component with the loaded users */}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\n// Export the Users component\r\nexport default Users;\r\n"],"names":["props","_jsx","className","concat","style","children","src","image","alt","width","height","Card","_jsxs","Link","to","id","Avatar","process","name","placeCount","items","length","map","user","UserItem","places","_useHttpClient","useHttpClient","isLoading","error","sendRequest","clearError","_useState","useState","_useState2","_slicedToArray","loadedUsers","setLoadedUsers","useEffect","fetchUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","responseData","wrap","_context","prev","next","sent","users","t0","stop","apply","arguments","React","ErrorModal","onClear","LoadingSpinner","UsersList"],"sourceRoot":""}